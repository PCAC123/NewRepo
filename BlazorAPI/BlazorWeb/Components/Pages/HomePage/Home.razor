@page "/"

<PageTitle>Home</PageTitle>
@using BlazorWeb.Components.Service
@using BlazorWeb.Models
@inject NavigationManager NavManager



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VinFast - Danh sách sản phẩm</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .navbar {
        background-color: #343a40;
        }

        .navbar-brand img {
        height: 40px;
        }

        .banner img {
        width: 100%;
        height: auto;
        max-height: 400px;
        object-fit: cover;
        }

        .card img {
        height: 150px;
        object-fit: cover;
        }

        .btn-detail {
        background-color: #ffc107;
        color: white;
        }

        .btn-detail:hover {
        background-color: #e0a800;
        color: white;
        }

        footer {
        background-color: #343a40;
        color: white;
        }

        .card-footer-custom {
        background-color: #dff7df;
        }
    </style>
</head>
<body class="bg-light">
    <!-- Banner -->
    <div class="banner my-3">
        <img src="img/banner.jpeg" alt="VinFast Banner">
    </div>
    @* <button @onclick="NavigateToCartItem"> *@
    @*     Chuyển trang *@
    @* </button> *@


    <!-- Product List -->
    <div class="container mt-5">
        <div class="text-center">
            <h3>Những Mẫu Xe Hot Hiện Nay</h3>
        </div>
        <div class="row g-4">
            @if (Model != null && Model.Any())
            {
                int count = 0;

                @foreach (var product in Model)
                {
                    if (count % 4 == 0 && count != 0)
                    {
                        <div class="w-100"></div>
                    }

                    <div class="col-lg-3 col-md-4 col-sm-6">
                        <div class="card shadow-lg h-100">
                            <h4> type="text" @product.CarId </h4>
                            <h4 class="card-title text-truncate text-center fw-bold text-dark">@product.CarModel</h4>
                            <img src="@product.ImageURL" alt="@product.CarModel" class="card-img-top" style="height: 200px; object-fit: cover;">
                            <div class="card-body">
                                <p>
                                    <strong>Giá Từ:</strong>
                                    <span class="text-danger fw-bold fs-5">@string.Format("{0:0,0 VNĐ}", product.Price)</span>
                                </p>
                            </div>
                            <div class="card-footer text-center card-footer-custom">
                                <div>
                                    <NavLink href="@($"/cartitem/{product.CarId}")" class="btn btn-primary">
                                         Đi đến CartItem
                                     </NavLink>
                                </div>
                            </div>
                        </div>
                    </div>

                    count++; // Tăng count sau mỗi lần lặp
                }
            }
            else
            {
                <div class="col-12">
                    <p class="text-center">Hiện tại không có sản phẩm nào.</p>
                </div>
            }
        </div>
    </div>
</body>
</html>

@code {
    private List<Car> Model { get; set; } = new List<Car>();
    [Inject] private IJSRuntime JS { get; set; } = default!;
    [Inject] private CarsService? ProductService { get; set; }
    //private string idCartitem = $"/cartitem/";
    protected override async Task OnInitializedAsync()
    {
        await LoadProducts(); // Gọi hàm riêng
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var debugFullName = await JS.InvokeAsync<string>("localStorage.getItem", "FullName");
            Console.WriteLine($"FullName in localStorage: {debugFullName}");
        }
    }

    private async Task LoadProducts()
    {
        Model = await ProductService!.GetProductsAsync();
       
        Console.WriteLine($"Số sản phẩm tải về: {Model.Count}");
    }

}

